1 + __1
__1:program:

_l;
alpha
_l;
letter
_l;
digit
_o
_st
_p
1 + parse
expr
_1=.
_tp;.byte 3,0;
_tp;.byte 1,0;
1 + _tp;.byte 2,0;
expr:

_pxs;
'(';
alt;
exp1
expr
operator
expr
_pxs;
')';
1 + trans;
1 + _1
_2=.
<LOAD >;
_1=.
_tx;_2
_tp;.byte 1,0;
1 + _txs;
' ';
exp1:

ident
1 + trans;
1 + _1
_2=.
<ADD >;
_1=.
1 + _tx;_2
operator:
op0:

_pxs;
'+';
alt;
op1
1 + trans;
1 + _1
_2=.
<SUB >;
_1=.
1 + _tx;_2
op1:

_pxs;
'-';
alt;
op2
1 + trans;
1 + _1
_2=.
<MPY >;
_1=.
1 + _tx;_2
op2:

_pxs;
'*';
alt;
op3
1 + trans;
1 + _1
_2=.
<DIV >;
_1=.
1 + _tx;_2
op3:

_pxs;
'/';
1 + trans;
1 + _1
_1=.
1 + _tp;.byte 1,0;
ident:

smark
any
letter
string
alpha
scopy
1 + trans;
1 + _1
letter:
1
digit:
2
alpha:
0

classtab:
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
2
2
2
2
2
2
2
2
2
2
0
0
0
0
0
0
0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
0
0
0
0
0
0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
0
0
0
0
0
_pn:1 + _pxs;
'\n'
_tn:1 + _txs;
'\n'
