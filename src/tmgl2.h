/* Port of the Unix compiler-compiler TMG to C99.
 * Based on the original PDP-11 assembly code by M. D. McIlroy.
 * (c) 2020, Andriy Makukha, 2-clause BSD License.
 * 
 * Phase 2 of translating TMGL into a TMG driving table in C. */

#define SRC_LANGUAGE "phase 1"
#define DST_LANGUAGE "TMG driving table in C"

const tword labels[];

// Driving table for the program

tword start[] = {
#define __1	(tword)&labels[0]
	1 + __1,
// __1:
#define __begin	(tword)&start[1]
	(tword)&_l,
#define __wsz	(tword)&labels[1]
	__wsz,
	(tword)&_l,
#define __k	(tword)&labels[2]
	__k,
	(tword)&_lv,
	(tword)&_l,
#define __i	(tword)&labels[3]
	__i,
	(tword)&_lv,
	(tword)&_s,
	(tword)&_st,
	(tword)&_p,
	(tword)&table,
#define __ltab	(tword)&labels[4]
	__ltab,
	(tword)&ignore,
#define __blanks	(tword)&labels[5]
	__blanks,
	(tword)&parse,
#define __intro	(tword)&labels[6]
	__intro,
#define __pr2	(tword)&start[18]
	(tword)&parse,
#define __line	(tword)&labels[7]
	__line,
	(tword)&salt,
	__pr2,
	(tword)&diag,
#define __error	(tword)&labels[8]
	__error,
	(tword)&salt,
	__pr2,
	1 + (tword)&parse,
#define __outro	(tword)&labels[9]
	__outro,
#undef  _2
#define _2	(tword)&start[28]
	(tword)"//#define SRC_LANGUAGE \"input language\"",
#undef  _3
#define _3	(tword)&start[29]
	(tword)"//#define DST_LANGUAGE \"output language\"",
#undef  _4
#define _4	(tword)&start[30]
	(tword)"const tword labels[];",
#undef  _5
#define _5	(tword)&start[31]
	(tword)"// Driving table for the program",
#undef  _6
#define _6	(tword)&start[32]
	(tword)"tword start[] = {",
#undef  _1
#define _1	(tword)&start[33]
	(tword)&_tx,
	_2,
#define _tn	(tword)&labels[10]
	_tn,
	(tword)&_tx,
	_3,
	_tn,
	_tn,
	(tword)&_tx,
	_4,
	_tn,
	_tn,
	(tword)&_tx,
	_5,
	_tn,
	_tn,
	(tword)&_tx,
	_6,
	1 + _tn,
// __intro:
	1 + (tword)&trans,
	1 + _1,
#undef  _2
#define _2	(tword)&start[53]
	(tword)"};",
#undef  _3
#define _3	(tword)&start[54]
	(tword)"// Global label addresses inside the driving table",
#undef  _4
#define _4	(tword)&start[55]
	(tword)"const tword labels[] = {",
#undef  _5
#define _5	(tword)&start[56]
	(tword)"};",
#undef  _1
#define _1	(tword)&start[57]
	(tword)&_tx,
	_2,
	_tn,
	_tn,
	(tword)&_tx,
	_3,
	_tn,
	_tn,
	(tword)&_tx,
	_4,
	_tn,
	(tword)&_tp,
	1,
	(tword)&_tx,
	_5,
	1 + _tn,
// __outro:
#define __labelarray	(tword)&labels[11]
	__labelarray,
	1 + (tword)&trans,
	1 + _1,
#undef  _2
#define _2	(tword)&start[76]
	(tword)"??? err: ",
#undef  _1
#define _1	(tword)&start[77]
	_tn,
	(tword)&_tx,
	_2,
	(tword)&_tp,
	1,
	1 + _tn,
// __error:
	(tword)&smark,
	(tword)&ignore,
#define __none	(tword)&labels[12]
	__none,
	(tword)&any,
#define __ascii	(tword)&labels[13]
	__ascii,
	(tword)&string,
#define __nonl	(tword)&labels[14]
	__nonl,
	(tword)&scopy,
#define _pn	(tword)&labels[15]
	_pn,
	(tword)&salt,
#define __2	(tword)&labels[16]
	__2,
// __2:
	1 + (tword)&trans,
	1 + _1,
#undef  _1
#define _1	(tword)&start[96]
	(tword)&_tp,
	2,
	1 + (tword)&_tp,
	1,
#undef  _2
#define _2	(tword)&start[100]
	1 + (tword)&generate,
// __line:
	(tword)&ignore,
#define __spaces	(tword)&labels[17]
	__spaces,
#define __strlit	(tword)&labels[18]
	__strlit,
	(tword)&alt,
#define __14	(tword)&labels[19]
	__14,
	_pn,
	(tword)&tgoto,
#define __3	(tword)&labels[20]
	__3,
// __14:
#define __chrlit	(tword)&labels[21]
	__chrlit,
	(tword)&alt,
#define __13	(tword)&labels[22]
	__13,
	_pn,
	(tword)&tgoto,
#define __4	(tword)&labels[23]
	__4,
// __13:
#define __loclbl	(tword)&labels[24]
	__loclbl,
	(tword)&alt,
#define __12	(tword)&labels[25]
	__12,
	_pn,
	(tword)&tgoto,
#define __5	(tword)&labels[26]
	__5,
// __12:
#define __labels	(tword)&labels[27]
	__labels,
	(tword)&alt,
#define __11	(tword)&labels[28]
	__11,
#define __values	(tword)&labels[29]
	__values,
	(tword)&salt,
#define __6	(tword)&labels[30]
	__6,
#define __null	(tword)&labels[31]
	__null,
// __6:
	(tword)&trans,
	1 + _1,
	(tword)&tgoto,
#define __7	(tword)&labels[32]
	__7,
// __11:
	__values,
	(tword)&salt,
#define __10	(tword)&labels[33]
	__10,
	_pn,
	(tword)&trans,
	1 + _2,
// __10:
// __7:
// __5:
// __4:
// __3:
	1 + (tword)&succ,
#undef  _1
#define _1	(tword)&start[139]
	(tword)"=.",
#undef  _3
#define _3	(tword)&start[140]
	(tword)"#undef  _",
#undef  _4
#define _4	(tword)&start[141]
	(tword)"#define _",
#undef  _5
#define _5	(tword)&start[142]
	(tword)"	(tword)&start[",
#undef  _2
#define _2	(tword)&start[143]
	(tword)&_tx,
	_3,
	(tword)&_tp,
	2,
	_tn,
	(tword)&_tx,
	_4,
	(tword)&_tp,
	2,
	(tword)&_tx,
	_5,
	(tword)&_tp,
	1,
	(tword)&_txs,
	(tword)']',
	1 + _tn,
// __loclbl:
	(tword)&_pxs,
	(tword)'_',
#define __number	(tword)&labels[34]
	__number,
	(tword)&_px,
	_1,
	(tword)&_pxs,
	(tword)';',
	(tword)&salt,
#define __15	(tword)&labels[35]
	__15,
// __15:
	(tword)&decimal,
#define __cnt	(tword)&labels[36]
	__cnt,
	1 + (tword)&trans,
	1 + _2,
#undef  _1
#define _1	(tword)&start[172]
	(tword)">",
#undef  _3
#define _3	(tword)&start[173]
	(tword)"	(tword)\"",
#undef  _4
#define _4	(tword)&start[174]
	(tword)"\",",
#undef  _2
#define _2	(tword)&start[175]
	(tword)&_tx,
	_3,
	(tword)&_tp,
	2,
	(tword)&_tp,
	1,
	(tword)&_tx,
	_4,
	1 + _tn,
// __strlit:
	(tword)&_pxs,
	(tword)'<',
	(tword)&ignore,
	__none,
#define __litesc	(tword)&labels[37]
	__litesc,
	(tword)&salt,
#define __16	(tword)&labels[38]
	__16,
	__null,
// __16:
#define __litb	(tword)&labels[39]
	__litb,
	(tword)&_px,
	_1,
	(tword)&_pxs,
	(tword)';',
	(tword)&salt,
#define __17	(tword)&labels[40]
	__17,
// __17:
	(tword)&_l,
	__cnt,
	(tword)&_ia,
	(tword)&_p,
	1 + (tword)&trans,
	1 + _2,
#undef  _1
#define _1	(tword)&start[205]
	(tword)"\\",
#undef  _2
#define _2	(tword)&start[206]
	(tword)">",
#undef  _4
#define _4	(tword)&start[207]
	(tword)">",
#undef  _3
#define _3	(tword)&start[208]
	1 + (tword)&_tx,
	_4,
#undef  _6
#define _6	(tword)&start[210]
	(tword)"\\",
#undef  _5
#define _5	(tword)&start[211]
	1 + (tword)&_tx,
	_6,
// __litesc:
	(tword)&_px,
	_1,
	(tword)&_px,
	_2,
	(tword)&alt,
#define __21	(tword)&labels[41]
	__21,
	(tword)&trans,
	1 + _3,
	(tword)&tgoto,
#define __20	(tword)&labels[42]
	__20,
// __21:
	(tword)&trans,
	1 + _5,
// __20:
	1 + (tword)&succ,
#undef  _1
#define _1	(tword)&start[226]
	(tword)&_tp,
	3,
	(tword)&_tp,
	2,
	1 + (tword)&_tp,
	1,
// __litb:
	(tword)&smark,
	(tword)&string,
#define __litch	(tword)&labels[43]
	__litch,
	(tword)&scopy,
#define __stresc	(tword)&labels[44]
	__stresc,
	(tword)&alt,
#define __done	(tword)&labels[45]
	__done,
	__litb,
	1 + (tword)&trans,
	1 + _1,
#undef  _2
#define _2	(tword)&start[242]
	(tword)"\\\"",
#undef  _1
#define _1	(tword)&start[243]
	1 + (tword)&_tx,
	_2,
// __stresc:
	(tword)&_pxs,
	(tword)'"',
	1 + (tword)&trans,
	1 + _1,
#undef  _2
#define _2	(tword)&start[249]
	(tword)"\\'",
#undef  _1
#define _1	(tword)&start[250]
	1 + (tword)&_tx,
	_2,
#undef  _3
#define _3	(tword)&start[252]
	(tword)"\\",
#undef  _5
#define _5	(tword)&start[253]
	(tword)"\\",
#undef  _4
#define _4	(tword)&start[254]
	(tword)&_tx,
	_5,
	1 + (tword)&_tp,
	1,
#undef  _6
#define _6	(tword)&start[258]
	1 + (tword)&generate,
#undef  _10
#define _10	(tword)&start[259]
	(tword)"	(tword)'",
#undef  _11
#define _11	(tword)&start[260]
	(tword)"',",
#undef  _7
#define _7	(tword)&start[261]
	(tword)&_tx,
	_10,
	(tword)&_tp,
	2,
	(tword)&_tx,
	_11,
	1 + _tn,
// __chrlit:
	(tword)&_pxs,
	(tword)'\'',
	(tword)&_pxs,
	(tword)'\'',
	(tword)&alt,
#define __25	(tword)&labels[46]
	__25,
	(tword)&trans,
	1 + _1,
	(tword)&tgoto,
#define __22	(tword)&labels[47]
	__22,
// __25:
	(tword)&_px,
	_3,
	(tword)&alt,
#define __24	(tword)&labels[48]
	__24,
	(tword)&smark,
	(tword)&any,
	__ascii,
	(tword)&scopy,
	(tword)&trans,
	1 + _4,
	(tword)&tgoto,
#define __23	(tword)&labels[49]
	__23,
// __24:
	(tword)&smark,
	(tword)&any,
	__ascii,
	(tword)&scopy,
// __23:
// __22:
	(tword)&_pxs,
	(tword)'\'',
	(tword)&_pxs,
	(tword)';',
	(tword)&alt,
#define __27	(tword)&labels[50]
	__27,
	(tword)&trans,
	1 + _6,
	(tword)&tgoto,
#define __26	(tword)&labels[51]
	__26,
// __27:
	__null,
// __26:
	(tword)&_l,
	__cnt,
	(tword)&_ia,
	(tword)&_p,
	1 + (tword)&trans,
	1 + _7,
#undef  _1
#define _1	(tword)&start[311]
	(tword)&_tp,
	2,
	1 + (tword)&_tp,
	1,
// __labels:
#define __label	(tword)&labels[52]
	__label,
	__labels,
	(tword)&alt,
	__done,
	1 + (tword)&trans,
	1 + _1,
#undef  _2
#define _2	(tword)&start[321]
	(tword)"// ",
#undef  _1
#define _1	(tword)&start[322]
	(tword)&_tx,
	_2,
	(tword)&_tp,
	2,
	(tword)&_txs,
	(tword)':',
	1 + _tn,
// __label:
#define __lblnam	(tword)&labels[53]
	__lblnam,
	(tword)&find,
	__ltab,
	__i,
	(tword)&alt,
#define __newlbl	(tword)&labels[54]
	__newlbl,
	(tword)&_l,
	__ltab,
	(tword)&_l,
	__i,
	(tword)&_f,
	(tword)&_l,
	__cnt,
	(tword)&_st,
	(tword)&_p,
	1 + (tword)&trans,
	1 + _1,
#undef  _1
#define _1	(tword)&start[346]
	0,
#undef  _3
#define _3	(tword)&start[347]
	(tword)"#define ",
#undef  _4
#define _4	(tword)&start[348]
	(tword)"	(tword)&start[",
#undef  _2
#define _2	(tword)&start[349]
	(tword)&_tx,
	_3,
	(tword)&_tp,
	2,
	(tword)&_tx,
	_4,
	(tword)&_tp,
	1,
	(tword)&_txs,
	(tword)']',
	1 + _tn,
// __newlbl:
	(tword)&decimal,
	__cnt,
#define __tabput	(tword)&labels[55]
	__tabput,
	__ltab,
	_1,
	1 + (tword)&trans,
	1 + _2,
#undef  _2
#define _2	(tword)&start[367]
	(tword)"__",
#undef  _1
#define _1	(tword)&start[368]
	(tword)&_tx,
	_2,
	1 + (tword)&_tp,
	1,
#undef  _3
#define _3	(tword)&start[372]
	1 + (tword)&_tp,
	1,
#undef  _5
#define _5	(tword)&start[374]
	(tword)"__",
#undef  _4
#define _4	(tword)&start[375]
	(tword)&_tx,
	_5,
	1 + (tword)&_tp,
	1,
// __lblnam:
	(tword)&ignore,
	__none,
	(tword)&smark,
	(tword)&any,
#define __under	(tword)&labels[56]
	__under,
	(tword)&alt,
#define __33	(tword)&labels[57]
	__33,
	(tword)&_pxs,
	(tword)'_',
	(tword)&alt,
#define __31	(tword)&labels[58]
	__31,
	__number,
	(tword)&trans,
	1 + _1,
	(tword)&tgoto,
#define __30	(tword)&labels[59]
	__30,
// __31:
	(tword)&any,
#define __tpcls	(tword)&labels[60]
	__tpcls,
	(tword)&any,
#define __ncls	(tword)&labels[61]
	__ncls,
	(tword)&scopy,
	(tword)&trans,
	1 + _3,
// __30:
	(tword)&tgoto,
#define __32	(tword)&labels[62]
	__32,
// __33:
#define __name	(tword)&labels[63]
	__name,
	(tword)&trans,
	1 + _4,
// __32:
	1 + (tword)&_pxs,
	(tword)':',
#undef  _1
#define _1	(tword)&start[409]
	1 + (tword)&_pxs,
	(tword)';',
#undef  _2
#define _2	(tword)&start[411]
	(tword)&_tp,
	2,
	1 + (tword)&_tp,
	1,
// __values:
	(tword)&ignore,
	__spaces,
#define __comvals	(tword)&start[417]
#define __extval	(tword)&labels[64]
	__extval,
	_1,
	(tword)&alt,
#define __nlval	(tword)&labels[65]
	__nlval,
	__comvals,
	(tword)&alt,
	__done,
	1 + (tword)&trans,
	1 + _2,
#undef  _1
#define _1	(tword)&start[426]
	1 + _pn,
// __nlval:
	__extval,
	_1,
	1 + __done,
#undef  _1
#define _1	(tword)&start[430]
	1,
#undef  _3
#define _3	(tword)&start[431]
	1 + (tword)&_tp,
	2,
#undef  _2
#define _2	(tword)&start[433]
	1 + (tword)&_tp,
	1,
	_3,
#undef  _4
#define _4	(tword)&start[436]
	1 + (tword)&_tp,
	1,
#define __nil	(tword)&labels[66]
	__nil,
// __extval:
	(tword)&params,
	_1,
#define __extbit	(tword)&labels[67]
	__extbit,
	(tword)&alt,
#define __35	(tword)&labels[68]
	__35,
#define __valsep	(tword)&labels[69]
	__valsep,
	(tword)((tuword)-1<<1),
	(tword)&trans,
	1 + _2,
	(tword)&tgoto,
#define __34	(tword)&labels[70]
	__34,
// __35:
	__valsep,
	(tword)((tuword)-1<<1),
	(tword)&trans,
	1 + _4,
// __34:
	1 + (tword)&succ,
#undef  _1
#define _1	(tword)&start[455]
	(tword)"1 + ",
#undef  _3
#define _3	(tword)&start[456]
	(tword)"1 + ",
#undef  _2
#define _2	(tword)&start[457]
	1 + (tword)&_tx,
	_3,
// __extbit:
	(tword)&_px,
	_1,
	1 + (tword)&trans,
	1 + _2,
#undef  _1
#define _1	(tword)&start[463]
	1,
#undef  _3
#define _3	(tword)&start[464]
	1 + (tword)&_tq,
	1,
#undef  _2
#define _2	(tword)&start[466]
	(tword)&gpar,
	1,
	1 + (tword)&_tp,
	1,
	_3,
// __valsep:
	(tword)&params,
	_1,
#define __value	(tword)&labels[71]
	__value,
	(tword)((tuword)-1<<1),
	1 + (tword)&trans,
	1 + _2,
#undef  _1
#define _1	(tword)&start[477]
	1,
#undef  _2
#define _2	(tword)&start[478]
	(tword)&gpar,
	1,
	(tword)&_txs,
	(tword)'	',
	(tword)&_tq,
	1,
	(tword)&_tp,
	1,
	(tword)&_txs,
	(tword)',',
	1 + _tn,
#undef  _4
#define _4	(tword)&start[489]
	(tword)"(tword)&",
#undef  _3
#define _3	(tword)&start[490]
	(tword)&gpar,
	1,
	(tword)&_txs,
	(tword)'	',
	(tword)&_tq,
	1,
	(tword)&_tx,
	_4,
	(tword)&_tp,
	1,
	(tword)&_txs,
	(tword)',',
	1 + _tn,
#undef  _5
#define _5	(tword)&start[503]
	(tword)&gpar,
	1,
	(tword)&_txs,
	(tword)'	',
	(tword)&_tq,
	1,
	(tword)&_tp,
	1,
	(tword)&_txs,
	(tword)',',
	1 + _tn,
// __value:
	(tword)&params,
	_1,
#define __vallit	(tword)&labels[72]
	__vallit,
	(tword)((tuword)-1<<1),
	(tword)&alt,
#define __41	(tword)&labels[73]
	__41,
	(tword)&_l,
	__cnt,
	(tword)&_ia,
	(tword)&_p,
	(tword)&trans,
	1 + _2,
	(tword)&tgoto,
#define __36	(tword)&labels[74]
	__36,
// __41:
#define __valbtn	(tword)&labels[75]
	__valbtn,
	(tword)((tuword)-1<<1),
	(tword)&alt,
#define __40	(tword)&labels[76]
	__40,
	(tword)&_l,
	__cnt,
	(tword)&_ia,
	(tword)&_p,
	(tword)&trans,
	1 + _3,
	(tword)&tgoto,
#define __37	(tword)&labels[77]
	__37,
// __40:
#define __vallbl	(tword)&labels[78]
	__vallbl,
	(tword)((tuword)-1<<1),
	(tword)&find,
	__ltab,
	__i,
	(tword)&alt,
#define __nuvlbl	(tword)&labels[79]
	__nuvlbl,
	(tword)&_l,
	__cnt,
	(tword)&_ia,
	(tword)&_p,
	(tword)&trans,
	1 + _5,
// __37:
// __36:
	1 + (tword)&succ,
#undef  _2
#define _2	(tword)&start[554]
	(tword)"#define ",
#undef  _3
#define _3	(tword)&start[555]
	(tword)"	(tword)&labels[",
#undef  _1
#define _1	(tword)&start[556]
	(tword)&gpar,
	1,
	(tword)&_tx,
	_2,
	(tword)&_tp,
	2,
	(tword)&_tx,
	_3,
	(tword)&_tp,
	1,
	(tword)&_txs,
	(tword)']',
	_tn,
	(tword)&_txs,
	(tword)'	',
	(tword)&_tq,
	1,
	(tword)&_tp,
	2,
	(tword)&_txs,
	(tword)',',
	1 + _tn,
// __nuvlbl:
	(tword)&decimal,
#define __lcnt	(tword)&labels[80]
	__lcnt,
#define __lblput	(tword)&labels[81]
	__lblput,
	(tword)&_l,
	__cnt,
	(tword)&_ia,
	(tword)&_p,
	1 + (tword)&trans,
	1 + _1,
#undef  _1
#define _1	(tword)&start[587]
	1,
#undef  _2
#define _2	(tword)&start[588]
	(tword)".byte",
#undef  _3
#define _3	(tword)&start[589]
	1 + (tword)&_pxs,
	(tword)',',
#undef  _4
#define _4	(tword)&start[591]
	(tword)"[-",
#undef  _5
#define _5	(tword)&start[592]
	(tword)"\\<1]",
#undef  _7
#define _7	(tword)&start[593]
	(tword)"(tword)((tuword)-",
#undef  _10
#define _10	(tword)&start[594]
	(tword)"<<1)",
#undef  _6
#define _6	(tword)&start[595]
	(tword)&_tx,
	_7,
	(tword)&_tp,
	1,
	1 + (tword)&_tx,
	_10,
#undef  _11
#define _11	(tword)&start[601]
	(tword)&_txs,
	(tword)'_',
	1 + (tword)&_tp,
	1,
// __vallit:
	(tword)&params,
	_1,
	(tword)&_px,
	_2,
	(tword)&alt,
#define __47	(tword)&labels[82]
	__47,
#define __octnum	(tword)&labels[83]
	__octnum,
	_3,
	(tword)&_pxs,
	(tword)'0',
	(tword)((tuword)-1<<1),
	(tword)&tgoto,
#define __42	(tword)&labels[84]
	__42,
// __47:
	(tword)&_px,
	_4,
	(tword)&alt,
#define __46	(tword)&labels[85]
	__46,
	__number,
	(tword)&_px,
	_5,
	(tword)((tuword)-1<<1),
	(tword)&trans,
	1 + _6,
	(tword)&tgoto,
#define __43	(tword)&labels[86]
	__43,
// __46:
	(tword)&_pxs,
	(tword)'_',
	(tword)&alt,
#define __45	(tword)&labels[87]
	__45,
	__number,
	(tword)((tuword)-1<<1),
	(tword)&trans,
	1 + _11,
	(tword)&tgoto,
#define __44	(tword)&labels[88]
	__44,
// __45:
	__octnum,
	(tword)((tuword)-1<<1),
// __44:
// __43:
// __42:
	1 + (tword)&succ,
#undef  _1
#define _1	(tword)&start[643]
	1,
#undef  _2
#define _2	(tword)&start[644]
	1 + (tword)&_tp,
	1,
#undef  _3
#define _3	(tword)&start[646]
	(tword)&_txs,
	(tword)'0',
	1 + (tword)&_tp,
	1,
// __octnum:
	(tword)&params,
	_1,
	(tword)&smark,
	(tword)&any,
#define __digit	(tword)&labels[89]
	__digit,
	(tword)((tuword)-1<<1),
	(tword)&alt,
#define __51	(tword)&labels[90]
	__51,
	(tword)&scopy,
	(tword)&trans,
	1 + _2,
	(tword)&tgoto,
#define __50	(tword)&labels[91]
	__50,
// __51:
	(tword)&ignore,
	__none,
	(tword)&any,
	__digit,
	(tword)&string,
	__digit,
	(tword)((tuword)-1<<1),
	(tword)&scopy,
	(tword)&trans,
	1 + _3,
// __50:
	1 + (tword)&succ,
#undef  _1
#define _1	(tword)&start[674]
	1,
#undef  _3
#define _3	(tword)&start[675]
	(tword)"__",
#undef  _2
#define _2	(tword)&start[676]
	(tword)&_tx,
	_3,
	1 + (tword)&_tp,
	1,
#undef  _5
#define _5	(tword)&start[680]
	(tword)"__",
#undef  _4
#define _4	(tword)&start[681]
	(tword)&_tx,
	_5,
	1 + (tword)&_tp,
	1,
// __vallbl:
	(tword)&params,
	_1,
	(tword)&ignore,
	__none,
	(tword)&smark,
	(tword)&any,
	__under,
	(tword)&alt,
#define __55	(tword)&labels[92]
	__55,
	(tword)&any,
	__tpcls,
	(tword)&alt,
#define __53	(tword)&labels[93]
	__53,
	(tword)&any,
	__ncls,
	(tword)&scopy,
	(tword)&tgoto,
#define __52	(tword)&labels[94]
	__52,
// __53:
	(tword)&_pxs,
	(tword)'_',
	__number,
	(tword)&trans,
	1 + _2,
// __52:
	(tword)&tgoto,
#define __54	(tword)&labels[95]
	__54,
// __55:
#define __usrdef	(tword)&labels[96]
	__usrdef,
	(tword)&trans,
	1 + _4,
// __54:
	1 + (tword)((tuword)-1<<1),
#undef  _1
#define _1	(tword)&start[714]
	1,
#undef  _2
#define _2	(tword)&start[715]
	(tword)&_txs,
	(tword)'_',
	1 + (tword)&_tp,
	1,
#undef  _3
#define _3	(tword)&start[719]
	(tword)&_txs,
	(tword)'_',
	1 + (tword)&_tp,
	1,
#undef  _4
#define _4	(tword)&start[723]
	(tword)&_txs,
	(tword)'_',
	1 + (tword)&_tp,
	1,
// __valbtn:
	(tword)&params,
	_1,
	(tword)&ignore,
	__none,
	(tword)&smark,
	(tword)&_pxs,
	(tword)'_',
	(tword)&alt,
#define __65	(tword)&labels[97]
	__65,
	(tword)&any,
	__tpcls,
	(tword)&alt,
#define __63	(tword)&labels[98]
	__63,
	(tword)&any,
	__ncls,
	(tword)&alt,
#define __61	(tword)&labels[99]
	__61,
	(tword)&scopy,
	(tword)&alt,
#define __57	(tword)&labels[100]
	__57,
	(tword)((tuword)-1<<1),
	(tword)&fail,
	(tword)&tgoto,
#define __56	(tword)&labels[101]
	__56,
// __57:
	(tword)&string,
#define __lowup	(tword)&labels[102]
	__lowup,
	(tword)&scopy,
	(tword)((tuword)-1<<1),
	(tword)&trans,
	1 + _2,
// __56:
	(tword)&tgoto,
#define __60	(tword)&labels[103]
	__60,
// __61:
	(tword)&string,
	__lowup,
	(tword)&scopy,
	(tword)((tuword)-1<<1),
	(tword)&trans,
	1 + _3,
// __60:
	(tword)&tgoto,
#define __62	(tword)&labels[104]
	__62,
// __63:
	(tword)&any,
	__lowup,
	(tword)&string,
	__lowup,
	(tword)&scopy,
	(tword)((tuword)-1<<1),
	(tword)&trans,
	1 + _4,
// __62:
	(tword)&tgoto,
#define __64	(tword)&labels[105]
	__64,
// __65:
#define __builtn	(tword)&labels[106]
	__builtn,
	(tword)((tuword)-1<<1),
// __64:
	1 + (tword)&succ,
#undef  _1
#define _1	(tword)&start[780]
	0,
// __lblput:
	__tabput,
	__ltab,
	_1,
	(tword)&_l,
	__wsz,
	(tword)&_l,
	__lcnt,
	(tword)&_m,
	(tword)&_l,
#define __lindex	(tword)&labels[107]
	__lindex,
	(tword)&_lv,
	(tword)&_a,
	(tword)&_rv,
	(tword)&_l,
	__i,
	(tword)&_st,
	(tword)&_p,
	(tword)&_l,
	__lcnt,
	(tword)&_ia,
	1 + (tword)&_p,
#undef  _1
#define _1	(tword)&start[802]
	2,
// __tabput:
	(tword)&params,
	_1,
	(tword)&enter,
	(tword)((tuword)-2<<1),
	__i,
	(tword)&_l,
	(tword)((tuword)-2<<1),
	(tword)&_l,
	__i,
	(tword)&_f,
	(tword)&_l,
	(tword)((tuword)-1<<1),
	(tword)&_st,
	1 + (tword)&_p,
// __builtn:
#define __built1	(tword)&labels[108]
	__built1,
	(tword)&salt,
#define __66	(tword)&labels[109]
	__66,
#define __built2	(tword)&labels[110]
	__built2,
// __66:
	1 + (tword)&succ,
#undef  _1
#define _1	(tword)&start[822]
	(tword)"ccept",
#undef  _3
#define _3	(tword)&start[823]
	(tword)"accept",
#undef  _2
#define _2	(tword)&start[824]
	1 + (tword)&_tx,
	_3,
#undef  _4
#define _4	(tword)&start[826]
	(tword)"lt",
#undef  _6
#define _6	(tword)&start[827]
	(tword)"alt",
#undef  _5
#define _5	(tword)&start[828]
	1 + (tword)&_tx,
	_6,
#undef  _7
#define _7	(tword)&start[830]
	(tword)"ny",
#undef  _11
#define _11	(tword)&start[831]
	(tword)"any",
#undef  _10
#define _10	(tword)&start[832]
	1 + (tword)&_tx,
	_11,
#undef  _12
#define _12	(tword)&start[834]
	(tword)"ppend",
#undef  _14
#define _14	(tword)&start[835]
	(tword)"append",
#undef  _13
#define _13	(tword)&start[836]
	1 + (tword)&_tx,
	_14,
#undef  _15
#define _15	(tword)&start[838]
	(tword)"ecimal",
#undef  _17
#define _17	(tword)&start[839]
	(tword)"decimal",
#undef  _16
#define _16	(tword)&start[840]
	1 + (tword)&_tx,
	_17,
#undef  _20
#define _20	(tword)&start[842]
	(tword)"iag",
#undef  _22
#define _22	(tword)&start[843]
	(tword)"diag",
#undef  _21
#define _21	(tword)&start[844]
	1 + (tword)&_tx,
	_22,
#undef  _23
#define _23	(tword)&start[846]
	(tword)"iscard",
#undef  _25
#define _25	(tword)&start[847]
	(tword)"discard",
#undef  _24
#define _24	(tword)&start[848]
	1 + (tword)&_tx,
	_25,
#undef  _26
#define _26	(tword)&start[850]
	(tword)"mit",
#undef  _30
#define _30	(tword)&start[851]
	(tword)"emit",
#undef  _27
#define _27	(tword)&start[852]
	1 + (tword)&_tx,
	_30,
#undef  _31
#define _31	(tword)&start[854]
	(tword)"nter",
#undef  _33
#define _33	(tword)&start[855]
	(tword)"enter",
#undef  _32
#define _32	(tword)&start[856]
	1 + (tword)&_tx,
	_33,
#undef  _34
#define _34	(tword)&start[858]
	(tword)"ail",
#undef  _36
#define _36	(tword)&start[859]
	(tword)"fail",
#undef  _35
#define _35	(tword)&start[860]
	1 + (tword)&_tx,
	_36,
#undef  _37
#define _37	(tword)&start[862]
	(tword)"ind",
#undef  _41
#define _41	(tword)&start[863]
	(tword)"find",
#undef  _40
#define _40	(tword)&start[864]
	1 + (tword)&_tx,
	_41,
#undef  _42
#define _42	(tword)&start[866]
	(tword)"enerate",
#undef  _44
#define _44	(tword)&start[867]
	(tword)"generate",
#undef  _43
#define _43	(tword)&start[868]
	1 + (tword)&_tx,
	_44,
#undef  _45
#define _45	(tword)&start[870]
	(tword)"etnam",
#undef  _47
#define _47	(tword)&start[871]
	(tword)"getnam",
#undef  _46
#define _46	(tword)&start[872]
	1 + (tword)&_tx,
	_47,
#undef  _50
#define _50	(tword)&start[874]
	(tword)"oto",
#undef  _52
#define _52	(tword)&start[875]
	(tword)"tgoto",
#undef  _51
#define _51	(tword)&start[876]
	1 + (tword)&_tx,
	_52,
#undef  _53
#define _53	(tword)&start[878]
	(tword)"otab",
#undef  _55
#define _55	(tword)&start[879]
	(tword)"gotab",
#undef  _54
#define _54	(tword)&start[880]
	1 + (tword)&_tx,
	_55,
#undef  _56
#define _56	(tword)&start[882]
	(tword)"par",
#undef  _60
#define _60	(tword)&start[883]
	(tword)"gpar",
#undef  _57
#define _57	(tword)&start[884]
	1 + (tword)&_tx,
	_60,
#undef  _61
#define _61	(tword)&start[886]
	(tword)"arse",
#undef  _63
#define _63	(tword)&start[887]
	(tword)"parse",
#undef  _62
#define _62	(tword)&start[888]
	1 + (tword)&_tx,
	_63,
#undef  _64
#define _64	(tword)&start[890]
	(tword)"arams",
#undef  _66
#define _66	(tword)&start[891]
	(tword)"params",
#undef  _65
#define _65	(tword)&start[892]
	1 + (tword)&_tx,
	_66,
#undef  _67
#define _67	(tword)&start[894]
	(tword)"ush",
#undef  _71
#define _71	(tword)&start[895]
	(tword)"push",
#undef  _70
#define _70	(tword)&start[896]
	1 + (tword)&_tx,
	_71,
#undef  _72
#define _72	(tword)&start[898]
	(tword)"copy",
#undef  _74
#define _74	(tword)&start[899]
	(tword)"scopy",
#undef  _73
#define _73	(tword)&start[900]
	1 + (tword)&_tx,
	_74,
#undef  _75
#define _75	(tword)&start[902]
	(tword)"alt",
#undef  _77
#define _77	(tword)&start[903]
	(tword)"salt",
#undef  _76
#define _76	(tword)&start[904]
	1 + (tword)&_tx,
	_77,
#undef  _100
#define _100	(tword)&start[906]
	(tword)"ize",
#undef  _102
#define _102	(tword)&start[907]
	(tword)"size",
#undef  _101
#define _101	(tword)&start[908]
	1 + (tword)&_tx,
	_102,
#undef  _103
#define _103	(tword)&start[910]
	(tword)"mark",
#undef  _105
#define _105	(tword)&start[911]
	(tword)"smark",
#undef  _104
#define _104	(tword)&start[912]
	1 + (tword)&_tx,
	_105,
#undef  _106
#define _106	(tword)&start[914]
	(tword)"tack",
#undef  _110
#define _110	(tword)&start[915]
	(tword)"stack",
#undef  _107
#define _107	(tword)&start[916]
	1 + (tword)&_tx,
	_110,
#undef  _111
#define _111	(tword)&start[918]
	(tword)"tring",
#undef  _113
#define _113	(tword)&start[919]
	(tword)"string",
#undef  _112
#define _112	(tword)&start[920]
	1 + (tword)&_tx,
	_113,
#undef  _114
#define _114	(tword)&start[922]
	(tword)"top",
#undef  _116
#define _116	(tword)&start[923]
	(tword)"stop",
#undef  _115
#define _115	(tword)&start[924]
	1 + (tword)&_tx,
	_116,
#undef  _117
#define _117	(tword)&start[926]
	(tword)"ucc",
#undef  _121
#define _121	(tword)&start[927]
	(tword)"succ",
#undef  _120
#define _120	(tword)&start[928]
	1 + (tword)&_tx,
	_121,
#undef  _122
#define _122	(tword)&start[930]
	(tword)"able",
#undef  _124
#define _124	(tword)&start[931]
	(tword)"table",
#undef  _123
#define _123	(tword)&start[932]
	1 + (tword)&_tx,
	_124,
#undef  _125
#define _125	(tword)&start[934]
	(tword)"rans",
#undef  _127
#define _127	(tword)&start[935]
	(tword)"trans",
#undef  _126
#define _126	(tword)&start[936]
	1 + (tword)&_tx,
	_127,
// __built1:
	(tword)&_pxs,
	(tword)'a',
	(tword)&alt,
#define __156	(tword)&labels[111]
	__156,
	(tword)&_px,
	_1,
	(tword)&alt,
#define __74	(tword)&labels[112]
	__74,
	(tword)&trans,
	1 + _2,
	(tword)&tgoto,
#define __67	(tword)&labels[113]
	__67,
// __74:
	(tword)&_px,
	_4,
	(tword)&alt,
#define __73	(tword)&labels[114]
	__73,
	(tword)&trans,
	1 + _5,
	(tword)&tgoto,
#define __70	(tword)&labels[115]
	__70,
// __73:
	(tword)&_px,
	_7,
	(tword)&alt,
#define __72	(tword)&labels[116]
	__72,
	(tword)&trans,
	1 + _10,
	(tword)&tgoto,
#define __71	(tword)&labels[117]
	__71,
// __72:
	(tword)&_px,
	_12,
	(tword)&trans,
	1 + _13,
// __71:
// __70:
// __67:
	(tword)&tgoto,
#define __75	(tword)&labels[118]
	__75,
// __156:
	(tword)&_pxs,
	(tword)'d',
	(tword)&alt,
#define __155	(tword)&labels[119]
	__155,
	(tword)&_px,
	_15,
	(tword)&alt,
#define __101	(tword)&labels[120]
	__101,
	(tword)&trans,
	1 + _16,
	(tword)&tgoto,
#define __76	(tword)&labels[121]
	__76,
// __101:
	(tword)&_px,
	_20,
	(tword)&alt,
#define __100	(tword)&labels[122]
	__100,
	(tword)&trans,
	1 + _21,
	(tword)&tgoto,
#define __77	(tword)&labels[123]
	__77,
// __100:
	(tword)&_px,
	_23,
	(tword)&trans,
	1 + _24,
// __77:
// __76:
	(tword)&tgoto,
#define __102	(tword)&labels[124]
	__102,
// __155:
	(tword)&_pxs,
	(tword)'e',
	(tword)&alt,
#define __154	(tword)&labels[125]
	__154,
	(tword)&_px,
	_26,
	(tword)&alt,
#define __104	(tword)&labels[126]
	__104,
	(tword)&trans,
	1 + _27,
	(tword)&tgoto,
#define __103	(tword)&labels[127]
	__103,
// __104:
	(tword)&_px,
	_31,
	(tword)&trans,
	1 + _32,
// __103:
	(tword)&tgoto,
#define __105	(tword)&labels[128]
	__105,
// __154:
	(tword)&_pxs,
	(tword)'f',
	(tword)&alt,
#define __153	(tword)&labels[129]
	__153,
	(tword)&_px,
	_34,
	(tword)&alt,
#define __107	(tword)&labels[130]
	__107,
	(tword)&trans,
	1 + _35,
	(tword)&tgoto,
#define __106	(tword)&labels[131]
	__106,
// __107:
	(tword)&_px,
	_37,
	(tword)&trans,
	1 + _40,
// __106:
	(tword)&tgoto,
#define __110	(tword)&labels[132]
	__110,
// __153:
	(tword)&_pxs,
	(tword)'g',
	(tword)&alt,
#define __152	(tword)&labels[133]
	__152,
	(tword)&_px,
	_42,
	(tword)&alt,
#define __120	(tword)&labels[134]
	__120,
	(tword)&trans,
	1 + _43,
	(tword)&tgoto,
#define __111	(tword)&labels[135]
	__111,
// __120:
	(tword)&_px,
	_45,
	(tword)&alt,
#define __117	(tword)&labels[136]
	__117,
	(tword)&trans,
	1 + _46,
	(tword)&tgoto,
#define __112	(tword)&labels[137]
	__112,
// __117:
	(tword)&_px,
	_50,
	(tword)&alt,
#define __116	(tword)&labels[138]
	__116,
	(tword)&trans,
	1 + _51,
	(tword)&tgoto,
#define __113	(tword)&labels[139]
	__113,
// __116:
	(tword)&_px,
	_53,
	(tword)&alt,
#define __115	(tword)&labels[140]
	__115,
	(tword)&trans,
	1 + _54,
	(tword)&tgoto,
#define __114	(tword)&labels[141]
	__114,
// __115:
	(tword)&_px,
	_56,
	(tword)&trans,
	1 + _57,
// __114:
// __113:
// __112:
// __111:
	(tword)&tgoto,
#define __121	(tword)&labels[142]
	__121,
// __152:
	(tword)&_pxs,
	(tword)'p',
	(tword)&alt,
#define __151	(tword)&labels[143]
	__151,
	(tword)&_px,
	_61,
	(tword)&alt,
#define __125	(tword)&labels[144]
	__125,
	(tword)&trans,
	1 + _62,
	(tword)&tgoto,
#define __122	(tword)&labels[145]
	__122,
// __125:
	(tword)&_px,
	_64,
	(tword)&alt,
#define __124	(tword)&labels[146]
	__124,
	(tword)&trans,
	1 + _65,
	(tword)&tgoto,
#define __123	(tword)&labels[147]
	__123,
// __124:
	(tword)&_px,
	_67,
	(tword)&trans,
	1 + _70,
// __123:
// __122:
	(tword)&tgoto,
#define __126	(tword)&labels[148]
	__126,
// __151:
	(tword)&_pxs,
	(tword)'s',
	(tword)&alt,
#define __150	(tword)&labels[149]
	__150,
	(tword)&_px,
	_72,
	(tword)&alt,
#define __144	(tword)&labels[150]
	__144,
	(tword)&trans,
	1 + _73,
	(tword)&tgoto,
#define __127	(tword)&labels[151]
	__127,
// __144:
	(tword)&_px,
	_75,
	(tword)&alt,
#define __143	(tword)&labels[152]
	__143,
	(tword)&trans,
	1 + _76,
	(tword)&tgoto,
#define __130	(tword)&labels[153]
	__130,
// __143:
	(tword)&_px,
	_100,
	(tword)&alt,
#define __142	(tword)&labels[154]
	__142,
	(tword)&trans,
	1 + _101,
	(tword)&tgoto,
#define __131	(tword)&labels[155]
	__131,
// __142:
	(tword)&_px,
	_103,
	(tword)&alt,
#define __141	(tword)&labels[156]
	__141,
	(tword)&trans,
	1 + _104,
	(tword)&tgoto,
#define __132	(tword)&labels[157]
	__132,
// __141:
	(tword)&_px,
	_106,
	(tword)&alt,
#define __140	(tword)&labels[158]
	__140,
	(tword)&trans,
	1 + _107,
	(tword)&tgoto,
#define __133	(tword)&labels[159]
	__133,
// __140:
	(tword)&_px,
	_111,
	(tword)&alt,
#define __137	(tword)&labels[160]
	__137,
	(tword)&trans,
	1 + _112,
	(tword)&tgoto,
#define __134	(tword)&labels[161]
	__134,
// __137:
	(tword)&_px,
	_114,
	(tword)&alt,
#define __136	(tword)&labels[162]
	__136,
	(tword)&trans,
	1 + _115,
	(tword)&tgoto,
#define __135	(tword)&labels[163]
	__135,
// __136:
	(tword)&_px,
	_117,
	(tword)&trans,
	1 + _120,
// __135:
// __134:
// __133:
// __132:
// __131:
// __130:
// __127:
	(tword)&tgoto,
#define __145	(tword)&labels[164]
	__145,
// __150:
	(tword)&_pxs,
	(tword)'t',
	(tword)&_px,
	_122,
	(tword)&alt,
#define __147	(tword)&labels[165]
	__147,
	(tword)&trans,
	1 + _123,
	(tword)&tgoto,
#define __146	(tword)&labels[166]
	__146,
// __147:
	(tword)&_px,
	_125,
	(tword)&trans,
	1 + _126,
// __146:
// __145:
// __126:
// __121:
// __110:
// __105:
// __102:
// __75:
	1 + (tword)&succ,
#undef  _1
#define _1	(tword)&start[1183]
	(tword)"bundle",
#undef  _3
#define _3	(tword)&start[1184]
	(tword)"bundle",
#undef  _2
#define _2	(tword)&start[1185]
	1 + (tword)&_tx,
	_3,
#undef  _4
#define _4	(tword)&start[1187]
	(tword)"char",
#undef  _6
#define _6	(tword)&start[1188]
	(tword)"tchar",
#undef  _5
#define _5	(tword)&start[1189]
	1 + (tword)&_tx,
	_6,
#undef  _7
#define _7	(tword)&start[1191]
	(tword)"ignore",
#undef  _11
#define _11	(tword)&start[1192]
	(tword)"ignore",
#undef  _10
#define _10	(tword)&start[1193]
	1 + (tword)&_tx,
	_11,
#undef  _12
#define _12	(tword)&start[1195]
	(tword)"octal",
#undef  _14
#define _14	(tword)&start[1196]
	(tword)"octal",
#undef  _13
#define _13	(tword)&start[1197]
	1 + (tword)&_tx,
	_14,
#undef  _15
#define _15	(tword)&start[1199]
	(tword)"reduce",
#undef  _17
#define _17	(tword)&start[1200]
	(tword)"reduce",
#undef  _16
#define _16	(tword)&start[1201]
	1 + (tword)&_tx,
	_17,
#undef  _20
#define _20	(tword)&start[1203]
	(tword)"unstack",
#undef  _22
#define _22	(tword)&start[1204]
	(tword)"unstack",
#undef  _21
#define _21	(tword)&start[1205]
	1 + (tword)&_tx,
	_22,
// __built2:
	(tword)&_px,
	_1,
	(tword)&alt,
#define __170	(tword)&labels[167]
	__170,
	(tword)&trans,
	1 + _2,
	(tword)&tgoto,
#define __157	(tword)&labels[168]
	__157,
// __170:
	(tword)&_px,
	_4,
	(tword)&alt,
#define __167	(tword)&labels[169]
	__167,
	(tword)&trans,
	1 + _5,
	(tword)&tgoto,
#define __160	(tword)&labels[170]
	__160,
// __167:
	(tword)&_px,
	_7,
	(tword)&alt,
#define __166	(tword)&labels[171]
	__166,
	(tword)&trans,
	1 + _10,
	(tword)&tgoto,
#define __161	(tword)&labels[172]
	__161,
// __166:
	(tword)&_px,
	_12,
	(tword)&alt,
#define __165	(tword)&labels[173]
	__165,
	(tword)&trans,
	1 + _13,
	(tword)&tgoto,
#define __162	(tword)&labels[174]
	__162,
// __165:
	(tword)&_px,
	_15,
	(tword)&alt,
#define __164	(tword)&labels[175]
	__164,
	(tword)&trans,
	1 + _16,
	(tword)&tgoto,
#define __163	(tword)&labels[176]
	__163,
// __164:
	(tword)&_px,
	_20,
	(tword)&trans,
	1 + _21,
// __163:
// __162:
// __161:
// __160:
// __157:
	1 + (tword)&succ,
#undef  _1
#define _1	(tword)&start[1252]
	0,
#undef  _4
#define _4	(tword)&start[1253]
	0,
#undef  _6
#define _6	(tword)&start[1254]
	(tword)"	(tword)&start[",
#undef  _7
#define _7	(tword)&start[1255]
	(tword)"],	// ",
#undef  _5
#define _5	(tword)&start[1256]
	(tword)&_tx,
	_6,
	(tword)&_tp,
	2,
	(tword)&_tx,
	_7,
	(tword)&_tp,
	1,
	1 + _tn,
#undef  _11
#define _11	(tword)&start[1265]
	(tword)&_tp,
	2,
	1 + (tword)&_tp,
	1,
// __labelarray:
	(tword)&_l,
	__lcnt,
	(tword)&_l,
	_1,
	(tword)&_gt,
	(tword)&_t,
	(tword)&alt,
	__null,
	(tword)&_l,
	__lcnt,
	(tword)&_l,
	__wsz,
	(tword)&_m,
	(tword)&_l,
#define __lindexend	(tword)&labels[177]
	__lindexend,
	(tword)&_lv,
	(tword)&_l,
	__lindex,
	(tword)&_lv,
	(tword)&_s,
	(tword)&_le,
	(tword)&_t,
	(tword)&alt,
#define __labelerror	(tword)&labels[178]
	__labelerror,
	(tword)&_l,
	__k,
	(tword)&_l,
	_4,
	(tword)&_st,
	(tword)&_p,
#define __loop	(tword)&start[1299]
	(tword)&_l,
	__i,
	(tword)&_l,
	__wsz,
	(tword)&_l,
	__k,
	(tword)&_m,
	(tword)&_l,
	__lindex,
	(tword)&_lv,
	(tword)&_a,
	(tword)&_rv,
	(tword)&_st,
	(tword)&_p,
	(tword)&_l,
#define __t	(tword)&labels[179]
	__t,
	(tword)&_l,
	__ltab,
	(tword)&_l,
	__i,
	(tword)&_f,
	(tword)&_st,
	(tword)&_p,
	(tword)&decimal,
	__t,
	(tword)&getnam,
	__ltab,
	__i,
	(tword)&trans,
	1 + _5,
	(tword)&_l,
	__k,
	(tword)&_ib,
	(tword)&_l,
	__lcnt,
	(tword)&_lt,
	(tword)&_t,
	(tword)&alt,
	__done,
	__loop,
	1 + (tword)&trans,
	1 + _11,
#undef  _2
#define _2	(tword)&start[1341]
	(tword)"// ERROR: label index array too small",
#undef  _1
#define _1	(tword)&start[1342]
	(tword)&_tx,
	_2,
	1 + _tn,
// __labelerror:
	(tword)&diag,
#define __labelerr	(tword)&labels[180]
	__labelerr,
// __labelerr:
	1 + (tword)&trans,
	1 + _1,
// __name:
#define __ident	(tword)&labels[181]
	__ident,
	1 + (tword)&scopy,
// __ident:
	(tword)&smark,
	(tword)&ignore,
	__none,
	(tword)&any,
#define __letter	(tword)&labels[182]
	__letter,
	1 + (tword)&string,
#define __alpha	(tword)&labels[183]
	__alpha,
// __number:
	(tword)&smark,
#define __num	(tword)&labels[184]
	__num,
	1 + (tword)&scopy,
// __num:
	(tword)&ignore,
	__none,
	(tword)&any,
	__digit,
	1 + (tword)&string,
	__digit,
#define __wrd	(tword)&start[1367]
	(tword)&smark,
	(tword)&ignore,
	__none,
	(tword)&any,
	__lowup,
	(tword)&string,
	__lowup,
	1 + (tword)&scopy,
// __usrdef:
	(tword)&smark,
	(tword)&ignore,
	__none,
	(tword)&any,
#define __nbrk	(tword)&labels[185]
	__nbrk,
	(tword)&string,
	__nbrk,
	1 + (tword)&scopy,
// __i:
	0,
// __k:
	0,
// __t:
	0,
// __cnt:
	0,
// __lcnt:
	0,
// __ltab:
	0,
// __wsz:
	0,
// __done:
	1 + (tword)&succ,
// __null:
	1 + (tword)&trans,
	1 + __nil,
// __nil:
	1 + (tword)&generate,
// __under:
	1,
// __digit:
	2,
// __lowup:
	4,
// __letter:
	010,
// __alpha:
	020,
// __litch:
	040,
// __none:
	0100,
// __ascii:
	0200,
// __spaces:
	0400,
// __blanks:
	01000,
// __nonl:
	02000,
// __nbrk:
	04000,
// __tpcls:
	010000,
// __ncls:
	020000,
// __lindex:
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
#define __lind2K	(tword)&start[2432]
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
#define __lind3K	(tword)&start[3456]
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
#define __lind4K	(tword)&start[4480]
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
// __lindexend:
	0,
#define __classtab	(tword)&start[5505]
	0,
	06240,
	06240,
	06240,
	06240,
	06240,
	06240,
	06240,
	06240,
	07640,
	01240,
	06240,
	06240,
	06240,
	06240,
	06240,
	06240,
	06240,
	06240,
	06240,
	06240,
	06240,
	06240,
	06240,
	06240,
	06240,
	06240,
	06240,
	06240,
	06240,
	06240,
	06240,
	07640,
	06240,
	06200,
	06240,
	06240,
	06240,
	06240,
	06240,
	06240,
	06240,
	06240,
	06240,
	02240,
	06240,
	06240,
	06240,
	06262,
	06262,
	06262,
	06262,
	06262,
	06262,
	06262,
	06262,
	06262,
	06262,
	06240,
	02240,
	06240,
	06240,
	06200,
	06240,
	06240,
	06274,
	06274,
	06274,
	06274,
	06274,
	06274,
	06274,
	06274,
	06274,
	06274,
	06274,
	06274,
	06274,
	06274,
	06274,
	06274,
	06274,
	06274,
	06274,
	06274,
	06274,
	06274,
	06274,
	06274,
	06274,
	06274,
	06240,
	06240,
	06240,
	06240,
	06271,
	06240,
	06274,
	06274,
	06274,
	06274,
	06274,
	06274,
	06274,
	06274,
	06274,
	06274,
	06274,
	06274,
	06274,
	026274,
	06274,
	016274,
	06274,
	06274,
	06274,
	016274,
	06274,
	06274,
	06274,
	06274,
	06274,
	06274,
	06240,
	06240,
	06240,
	06240,
	06240,
// _pn:
	1 + (tword)&_pxs,
	(tword)'\n',
// _tn:
	1 + (tword)&_txs,
	(tword)'\n',
};

// Global label addresses inside the driving table

const tword labels[] = {
	(tword)&start[1],	// __1
	(tword)&start[1389],	// __wsz
	(tword)&start[1384],	// __k
	(tword)&start[1383],	// __i
	(tword)&start[1388],	// __ltab
	(tword)&start[1403],	// __blanks
	(tword)&start[51],	// __intro
	(tword)&start[101],	// __line
	(tword)&start[83],	// __error
	(tword)&start[73],	// __outro
	(tword)&start[5635],	// _tn
	(tword)&start[1269],	// __labelarray
	(tword)&start[1400],	// __none
	(tword)&start[1401],	// __ascii
	(tword)&start[1404],	// __nonl
	(tword)&start[5633],	// _pn
	(tword)&start[94],	// __2
	(tword)&start[1402],	// __spaces
	(tword)&start[184],	// __strlit
	(tword)&start[109],	// __14
	(tword)&start[138],	// __3
	(tword)&start[268],	// __chrlit
	(tword)&start[115],	// __13
	(tword)&start[138],	// __4
	(tword)&start[159],	// __loclbl
	(tword)&start[121],	// __12
	(tword)&start[138],	// __5
	(tword)&start[315],	// __labels
	(tword)&start[132],	// __11
	(tword)&start[415],	// __values
	(tword)&start[128],	// __6
	(tword)&start[1391],	// __null
	(tword)&start[138],	// __7
	(tword)&start[138],	// __10
	(tword)&start[1358],	// __number
	(tword)&start[168],	// __15
	(tword)&start[1386],	// __cnt
	(tword)&start[213],	// __litesc
	(tword)&start[192],	// __16
	(tword)&start[232],	// __litb
	(tword)&start[199],	// __17
	(tword)&start[223],	// __21
	(tword)&start[225],	// __20
	(tword)&start[1399],	// __litch
	(tword)&start[245],	// __stresc
	(tword)&start[1390],	// __done
	(tword)&start[278],	// __25
	(tword)&start[294],	// __22
	(tword)&start[290],	// __24
	(tword)&start[294],	// __23
	(tword)&start[304],	// __27
	(tword)&start[305],	// __26
	(tword)&start[329],	// __label
	(tword)&start[379],	// __lblnam
	(tword)&start[360],	// __newlbl
	(tword)&start[803],	// __tabput
	(tword)&start[1394],	// __under
	(tword)&start[404],	// __33
	(tword)&start[395],	// __31
	(tword)&start[402],	// __30
	(tword)&start[1406],	// __tpcls
	(tword)&start[1407],	// __ncls
	(tword)&start[407],	// __32
	(tword)&start[1349],	// __name
	(tword)&start[439],	// __extval
	(tword)&start[427],	// __nlval
	(tword)&start[1393],	// __nil
	(tword)&start[459],	// __extbit
	(tword)&start[450],	// __35
	(tword)&start[471],	// __valsep
	(tword)&start[454],	// __34
	(tword)&start[514],	// __value
	(tword)&start[605],	// __vallit
	(tword)&start[528],	// __41
	(tword)&start[553],	// __36
	(tword)&start[727],	// __valbtn
	(tword)&start[540],	// __40
	(tword)&start[553],	// __37
	(tword)&start[685],	// __vallbl
	(tword)&start[578],	// __nuvlbl
	(tword)&start[1387],	// __lcnt
	(tword)&start[781],	// __lblput
	(tword)&start[618],	// __47
	(tword)&start[650],	// __octnum
	(tword)&start[642],	// __42
	(tword)&start[630],	// __46
	(tword)&start[642],	// __43
	(tword)&start[640],	// __45
	(tword)&start[642],	// __44
	(tword)&start[1395],	// __digit
	(tword)&start[663],	// __51
	(tword)&start[673],	// __50
	(tword)&start[710],	// __55
	(tword)&start[703],	// __53
	(tword)&start[708],	// __52
	(tword)&start[713],	// __54
	(tword)&start[1375],	// __usrdef
	(tword)&start[777],	// __65
	(tword)&start[767],	// __63
	(tword)&start[759],	// __61
	(tword)&start[751],	// __57
	(tword)&start[757],	// __56
	(tword)&start[1396],	// __lowup
	(tword)&start[765],	// __60
	(tword)&start[775],	// __62
	(tword)&start[779],	// __64
	(tword)&start[817],	// __builtn
	(tword)&start[1408],	// __lindex
	(tword)&start[938],	// __built1
	(tword)&start[821],	// __66
	(tword)&start[1207],	// __built2
	(tword)&start[972],	// __156
	(tword)&start[950],	// __74
	(tword)&start[970],	// __67
	(tword)&start[958],	// __73
	(tword)&start[970],	// __70
	(tword)&start[966],	// __72
	(tword)&start[970],	// __71
	(tword)&start[1182],	// __75
	(tword)&start[998],	// __155
	(tword)&start[984],	// __101
	(tword)&start[996],	// __76
	(tword)&start[992],	// __100
	(tword)&start[996],	// __77
	(tword)&start[1182],	// __102
	(tword)&start[1016],	// __154
	(tword)&start[1010],	// __104
	(tword)&start[1014],	// __103
	(tword)&start[1182],	// __105
	(tword)&start[1034],	// __153
	(tword)&start[1028],	// __107
	(tword)&start[1032],	// __106
	(tword)&start[1182],	// __110
	(tword)&start[1076],	// __152
	(tword)&start[1046],	// __120
	(tword)&start[1074],	// __111
	(tword)&start[1054],	// __117
	(tword)&start[1074],	// __112
	(tword)&start[1062],	// __116
	(tword)&start[1074],	// __113
	(tword)&start[1070],	// __115
	(tword)&start[1074],	// __114
	(tword)&start[1182],	// __121
	(tword)&start[1102],	// __151
	(tword)&start[1088],	// __125
	(tword)&start[1100],	// __122
	(tword)&start[1096],	// __124
	(tword)&start[1100],	// __123
	(tword)&start[1182],	// __126
	(tword)&start[1168],	// __150
	(tword)&start[1114],	// __144
	(tword)&start[1166],	// __127
	(tword)&start[1122],	// __143
	(tword)&start[1166],	// __130
	(tword)&start[1130],	// __142
	(tword)&start[1166],	// __131
	(tword)&start[1138],	// __141
	(tword)&start[1166],	// __132
	(tword)&start[1146],	// __140
	(tword)&start[1166],	// __133
	(tword)&start[1154],	// __137
	(tword)&start[1166],	// __134
	(tword)&start[1162],	// __136
	(tword)&start[1166],	// __135
	(tword)&start[1182],	// __145
	(tword)&start[1178],	// __147
	(tword)&start[1182],	// __146
	(tword)&start[1215],	// __170
	(tword)&start[1251],	// __157
	(tword)&start[1223],	// __167
	(tword)&start[1251],	// __160
	(tword)&start[1231],	// __166
	(tword)&start[1251],	// __161
	(tword)&start[1239],	// __165
	(tword)&start[1251],	// __162
	(tword)&start[1247],	// __164
	(tword)&start[1251],	// __163
	(tword)&start[5504],	// __lindexend
	(tword)&start[1345],	// __labelerror
	(tword)&start[1385],	// __t
	(tword)&start[1347],	// __labelerr
	(tword)&start[1351],	// __ident
	(tword)&start[1397],	// __letter
	(tword)&start[1398],	// __alpha
	(tword)&start[1361],	// __num
	(tword)&start[1405],	// __nbrk
};

// Used builtins:
//   _a
//   _f
//   _gt
//   _ia
//   _ib
//   _l
//   _le
//   _lt
//   _lv
//   _m
//   _p
//   _px
//   _pxs
//   _rv
//   _s
//   _st
//   _t
//   _tp
//   _tq
//   _tx
//   _txs
//   alt
//   any
//   decimal
//   diag
//   enter
//   fail
//   find
//   generate
//   getnam
//   gpar
//   ignore
//   params
//   parse
//   salt
//   scopy
//   smark
//   string
//   succ
//   table
//   tgoto
//   trans
